[{"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\index.js":"1","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\App.js":"2","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\reportWebVitals.js":"4","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\store\\store.js":"5","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\pages\\home-page.jsx":"6","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\pages\\board-details.jsx":"7","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\pages\\user-details.jsx":"8","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\side-bar.jsx":"9","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\user-msg.jsx":"10","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-details.jsx":"11","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\store\\user.reducer.js":"12","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\event-bus.service.js":"13","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\socket.service.js":"14","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\user.service.js":"15","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\async-storage.service.js":"16","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\http.service.js":"17","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\store\\board.reducer.js":"18","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\board-list.jsx":"19","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\group-list.jsx":"20","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\board.service.local.js":"21","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\board-header.jsx":"22","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\assets\\icons\\icons.js":"23","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\util.service.js":"24","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\store\\board.actions.js":"25","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\group-preview.jsx":"26","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-list.jsx":"27","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-list-header.jsx":"28","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-preview.jsx":"29","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\store\\selected-board.reducer.js":"30","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\store\\selected-board.actions.js":"31","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\task.service.js":"32","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-cmps\\label-picker.jsx":"33","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-cmps\\member-picker.jsx":"34","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-cmps\\task-title.jsx":"35","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-cmps\\date-picker.jsx":"36"},{"size":833,"mtime":1685555048486,"results":"37","hashOfConfig":"38"},{"size":951,"mtime":1685604418971,"results":"39","hashOfConfig":"38"},{"size":5201,"mtime":1685555048488,"results":"40","hashOfConfig":"38"},{"size":377,"mtime":1685555048487,"results":"41","hashOfConfig":"38"},{"size":777,"mtime":1685604418979,"results":"42","hashOfConfig":"38"},{"size":63,"mtime":1685555048486,"results":"43","hashOfConfig":"38"},{"size":995,"mtime":1685604418978,"results":"44","hashOfConfig":"38"},{"size":165,"mtime":1685604418978,"results":"45","hashOfConfig":"38"},{"size":714,"mtime":1685604418975,"results":"46","hashOfConfig":"38"},{"size":1162,"mtime":1685555048485,"results":"47","hashOfConfig":"38"},{"size":34,"mtime":1685555048484,"results":"48","hashOfConfig":"38"},{"size":932,"mtime":1685559464373,"results":"49","hashOfConfig":"38"},{"size":895,"mtime":1685555048489,"results":"50","hashOfConfig":"38"},{"size":3091,"mtime":1685559464370,"results":"51","hashOfConfig":"38"},{"size":2754,"mtime":1685559464371,"results":"52","hashOfConfig":"38"},{"size":2156,"mtime":1685555048488,"results":"53","hashOfConfig":"38"},{"size":993,"mtime":1685559464368,"results":"54","hashOfConfig":"38"},{"size":838,"mtime":1685559464372,"results":"55","hashOfConfig":"38"},{"size":360,"mtime":1685559464364,"results":"56","hashOfConfig":"38"},{"size":400,"mtime":1685604469549,"results":"57","hashOfConfig":"38"},{"size":5353,"mtime":1685604193726,"results":"58","hashOfConfig":"38"},{"size":232,"mtime":1685559464364,"results":"59","hashOfConfig":"38"},{"size":21221,"mtime":1685604471628,"results":"60","hashOfConfig":"38"},{"size":1894,"mtime":1685555048491,"results":"61","hashOfConfig":"38"},{"size":1094,"mtime":1685559464371,"results":"62","hashOfConfig":"38"},{"size":344,"mtime":1685604527405,"results":"63","hashOfConfig":"38"},{"size":435,"mtime":1685604516469,"results":"64","hashOfConfig":"38"},{"size":134,"mtime":1685604418977,"results":"65","hashOfConfig":"38"},{"size":948,"mtime":1685604418977,"results":"66","hashOfConfig":"38"},{"size":739,"mtime":1685604418979,"results":"67","hashOfConfig":"38"},{"size":385,"mtime":1685604418978,"results":"68","hashOfConfig":"38"},{"size":4130,"mtime":1685558133947,"results":"69","hashOfConfig":"38"},{"size":36,"mtime":1685604418976,"results":"70","hashOfConfig":"38"},{"size":107,"mtime":1685604418976,"results":"71","hashOfConfig":"38"},{"size":96,"mtime":1685604418976,"results":"72","hashOfConfig":"38"},{"size":33,"mtime":1685604418976,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hrrh26",{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"111"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"111"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"111"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\index.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\App.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\serviceWorkerRegistration.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\store\\store.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\pages\\home-page.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\pages\\board-details.jsx",["191","192","193","194"],[],"import { useNavigate, useParams } from 'react-router-dom'\r\nimport { BoardList } from '../cmps/board-list'\r\nimport { BoardHeader } from '../cmps/board-header'\r\nimport { GroupList } from '../cmps/group-list'\r\nimport { boardService } from '../services/board.service.local'\r\nimport { useEffect, useState } from 'react'\r\nimport { showErrorMsg } from '../services/event-bus.service'\r\nimport { useSelector } from 'react-redux'\r\nimport { loadBoard } from '../store/selected-board.actions'\r\nimport { SideBar } from '../cmps/side-bar'\r\n\r\nexport function BoardDetails() {\r\n\tconst { boardId } = useParams()\r\n\tconst board = useSelector(storeState => storeState.selectedBoardModule.selectedBoard)\r\n\tuseEffect(() => {\r\n\t\tif (boardId) loadBoard(boardId)\r\n\t}, [boardId])\r\n\r\n\treturn (\r\n\t\t<section className=\"board-details\">\r\n\t\t\t<SideBar />\r\n\t\t\t<BoardList />\r\n\t\t\t<section className=\"board-container\">\r\n\t\t\t\t<BoardHeader board={board} />\r\n\t\t\t\t<GroupList groups={board.groups} />\r\n\t\t\t</section>\r\n\t\t</section>\r\n\t)\r\n}\r\n","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\pages\\user-details.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\side-bar.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\user-msg.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-details.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\store\\user.reducer.js",[],[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\event-bus.service.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\socket.service.js",["195"],[],"import io from 'socket.io-client'\r\nimport { userService } from './user.service'\r\n\r\nexport const SOCKET_EVENT_ADD_MSG = 'chat-add-msg'\r\nexport const SOCKET_EMIT_SEND_MSG = 'chat-send-msg'\r\nexport const SOCKET_EMIT_SET_TOPIC = 'chat-set-topic'\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch'\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated'\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added'\r\nexport const SOCKET_EVENT_REVIEW_ABOUT_YOU = 'review-about-you'\r\n\r\nconst SOCKET_EMIT_LOGIN = 'set-user-socket'\r\nconst SOCKET_EMIT_LOGOUT = 'unset-user-socket'\r\n\r\nconst baseUrl = process.env.NODE_ENV === 'production' ? '' : '//localhost:3030'\r\n// export const socketService = createSocketService()\r\nexport const socketService = createDummySocketService()\r\n\r\n// for debugging from console\r\nwindow.socketService = socketService\r\n\r\nsocketService.setup()\r\n\r\nfunction createSocketService() {\r\n\tvar socket = null\r\n\tconst socketService = {\r\n\t\tsetup() {\r\n\t\t\tsocket = io(baseUrl)\r\n\t\t\tconst user = userService.getLoggedInUser()\r\n\t\t\tif (user) this.login(user._id)\r\n\t\t},\r\n\t\ton(eventName, cb) {\r\n\t\t\tsocket.on(eventName, cb)\r\n\t\t},\r\n\t\toff(eventName, cb = null) {\r\n\t\t\tif (!socket) return\r\n\t\t\tif (!cb) socket.removeAllListeners(eventName)\r\n\t\t\telse socket.off(eventName, cb)\r\n\t\t},\r\n\t\temit(eventName, data) {\r\n\t\t\tsocket.emit(eventName, data)\r\n\t\t},\r\n\t\tlogin(userId) {\r\n\t\t\tsocket.emit(SOCKET_EMIT_LOGIN, userId)\r\n\t\t},\r\n\t\tlogout() {\r\n\t\t\tsocket.emit(SOCKET_EMIT_LOGOUT)\r\n\t\t},\r\n\t\tterminate() {\r\n\t\t\tsocket = null\r\n\t\t},\r\n\t}\r\n\treturn socketService\r\n}\r\n\r\nfunction createDummySocketService() {\r\n\tvar listenersMap = {}\r\n\tconst socketService = {\r\n\t\tlistenersMap,\r\n\t\tsetup() {\r\n\t\t\tlistenersMap = {}\r\n\t\t},\r\n\t\tterminate() {\r\n\t\t\tthis.setup()\r\n\t\t},\r\n\t\tlogin() {\r\n\t\t\tconsole.log('Dummy socket service here, login - got it')\r\n\t\t},\r\n\t\tlogout() {\r\n\t\t\tconsole.log('Dummy socket service here, logout - got it')\r\n\t\t},\r\n\t\ton(eventName, cb) {\r\n\t\t\tlistenersMap[eventName] = [...(listenersMap[eventName] || []), cb]\r\n\t\t},\r\n\t\toff(eventName, cb) {\r\n\t\t\tif (!listenersMap[eventName]) return\r\n\t\t\tif (!cb) delete listenersMap[eventName]\r\n\t\t\telse listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n\t\t},\r\n\t\temit(eventName, data) {\r\n\t\t\tvar listeners = listenersMap[eventName]\r\n\t\t\tif (eventName === SOCKET_EMIT_SEND_MSG) {\r\n\t\t\t\tlisteners = listenersMap[SOCKET_EVENT_ADD_MSG]\r\n\t\t\t}\r\n\r\n\t\t\tif (!listeners) return\r\n\r\n\t\t\tlisteners.forEach(listener => {\r\n\t\t\t\tlistener(data)\r\n\t\t\t})\r\n\t\t},\r\n\t\t// Functions for easy testing of pushed data\r\n\t\ttestChatMsg() {\r\n\t\t\tthis.emit(SOCKET_EVENT_ADD_MSG, { from: 'Someone', txt: 'Aha it worked!' })\r\n\t\t},\r\n\t\ttestUserUpdate() {\r\n\t\t\tthis.emit(SOCKET_EVENT_USER_UPDATED, { ...userService.getLoggedInUser(), score: 555 })\r\n\t\t},\r\n\t}\r\n\twindow.listenersMap = listenersMap\r\n\treturn socketService\r\n}\r\n\r\n// Basic Tests\r\n// function cb(x) {console.log('Socket Test - Expected Puk, Actual:', x)}\r\n// socketService.on('baba', cb)\r\n// socketService.on('baba', cb)\r\n// socketService.on('baba', cb)\r\n// socketService.on('mama', cb)\r\n// socketService.emit('baba', 'Puk')\r\n// socketService.off('baba', cb)\r\n","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\user.service.js",["196"],[],"import { storageService } from './async-storage.service'\r\nimport { httpService } from './http.service'\r\n\r\nconst STORAGE_KEY_LOGGEDIN_USER = 'loggedInUser'\r\n\r\nexport const userService = {\r\n\tlogin,\r\n\tlogout,\r\n\tsignup,\r\n\tgetLoggedInUser,\r\n\tsaveLocalUser,\r\n\tgetUsers,\r\n\tgetById,\r\n\tremove,\r\n\tupdate,\r\n\tchangeScore,\r\n}\r\n\r\nwindow.userService = userService\r\n\r\nfunction getUsers() {\r\n\treturn storageService.query('user')\r\n\t// return httpService.get(`user`)\r\n}\r\n\r\nasync function getById(userId) {\r\n\tconst user = await storageService.get('user', userId)\r\n\t// const user = await httpService.get(`user/${userId}`)\r\n\treturn user\r\n}\r\n\r\nfunction remove(userId) {\r\n\treturn storageService.remove('user', userId)\r\n\t// return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update({ _id, score }) {\r\n\tconst user = await storageService.get('user', _id)\r\n\tuser.score = score\r\n\tawait storageService.put('user', user)\r\n\r\n\t// const user = await httpService.put(`user/${_id}`, {_id, score})\r\n\t// Handle case in which admin updates other user's details\r\n\tif (getLoggedInUser()._id === user._id) saveLocalUser(user)\r\n\treturn user\r\n}\r\n\r\nasync function login(userCred) {\r\n\tconst users = await storageService.query('user')\r\n\tconst user = users.find(user => user.username === userCred.username)\r\n\t// const user = await httpService.post('auth/login', userCred)\r\n\tif (user) {\r\n\t\treturn saveLocalUser(user)\r\n\t}\r\n}\r\nasync function signup(userCred) {\r\n\tuserCred.score = 10000\r\n\tif (!userCred.imgUrl) userCred.imgUrl = 'https://cdn.pixabay.com/photo/2020/07/01/12/58/icon-5359553_1280.png'\r\n\tconst user = await storageService.post('user', userCred)\r\n\t// const user = await httpService.post('auth/signup', userCred)\r\n\treturn saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n\tsessionStorage.removeItem(STORAGE_KEY_LOGGEDIN_USER)\r\n\t// return await httpService.post('auth/logout')\r\n}\r\n\r\nasync function changeScore(by) {\r\n\tconst user = getLoggedInUser()\r\n\tif (!user) throw new Error('Not loggedIn')\r\n\tuser.score = user.score + by || by\r\n\tawait update(user)\r\n\treturn user.score\r\n}\r\n\r\nfunction saveLocalUser(user) {\r\n\tuser = { _id: user._id, fullname: user.fullname, imgUrl: user.imgUrl, score: user.score }\r\n\tsessionStorage.setItem(STORAGE_KEY_LOGGEDIN_USER, JSON.stringify(user))\r\n\treturn user\r\n}\r\n\r\nfunction getLoggedInUser() {\r\n\treturn JSON.parse(sessionStorage.getItem(STORAGE_KEY_LOGGEDIN_USER))\r\n}\r\n\r\n// ;(async ()=>{\r\n//     await userService.signup({fullname: 'Puki Norma', username: 'puki', password:'123',score: 10000, isAdmin: false})\r\n//     await userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 10000, isAdmin: true})\r\n//     await userService.signup({fullname: 'Muki G', username: 'muki', password:'123', score: 10000})\r\n// })()\r\n","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\async-storage.service.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\http.service.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\store\\board.reducer.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\board-list.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\group-list.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\board.service.local.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\board-header.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\assets\\icons\\icons.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\util.service.js",["197"],[],"export const utilService = {\r\n    makeId,\r\n    makeLorem,\r\n    getRandomIntInclusive,\r\n    debounce,\r\n    randomPastTime,\r\n    saveToStorage,\r\n    loadFromStorage\r\n}\r\n\r\nfunction makeId(length = 6) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n\r\n    return txt\r\n}\r\n\r\nfunction makeLorem(size = 100) {\r\n    var words = ['The sky', 'above', 'the port', 'was', 'the color of television', 'tuned', 'to', 'a dead channel', '.', 'All', 'this happened', 'more or less', '.', 'I', 'had', 'the story', 'bit by bit', 'from various people', 'and', 'as generally', 'happens', 'in such cases', 'each time', 'it', 'was', 'a different story', '.', 'It', 'was', 'a pleasure', 'to', 'burn']\r\n    var txt = ''\r\n    while (size > 0) {\r\n        size--\r\n        txt += words[Math.floor(Math.random() * words.length)] + ' '\r\n    }\r\n    return txt\r\n}\r\n\r\nfunction getRandomIntInclusive(min, max) {\r\n    min = Math.ceil(min)\r\n    max = Math.floor(max)\r\n    return Math.floor(Math.random() * (max - min + 1)) + min //The maximum is inclusive and the minimum is inclusive \r\n}\r\n\r\n\r\nfunction randomPastTime() {\r\n    const HOUR = 1000 * 60 * 60\r\n    const DAY = 1000 * 60 * 60 * 24\r\n    const WEEK = 1000 * 60 * 60 * 24 * 7\r\n\r\n    const pastTime = getRandomIntInclusive(HOUR, WEEK)\r\n    return Date.now() - pastTime\r\n}\r\n\r\nfunction debounce(func, timeout = 300){\r\n    let timer\r\n    return (...args) => {\r\n      clearTimeout(timer)\r\n      timer = setTimeout(() => { func.apply(this, args) }, timeout)\r\n    }\r\n}\r\n\r\nfunction saveToStorage(key, value) {\r\n    localStorage.setItem(key, JSON.stringify(value))\r\n}\r\n\r\nfunction loadFromStorage(key) {\r\n    const data = localStorage.getItem(key)\r\n    return (data) ? JSON.parse(data) : undefined\r\n}\r\n","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\store\\board.actions.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\group-preview.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-list.jsx",["198"],[],"import { taskService } from '../services/task.service.js'\r\nimport { TaskListHeader } from './task-list-header.jsx'\r\nimport { TaskPreview } from './task-preview.jsx'\r\n\r\nexport function TaskList({ board, tasks }) {\r\n\treturn (\r\n\t\t<ul className=\"task-list clean-list\">\r\n\t\t\t<TaskListHeader tasks={tasks} />\r\n\t\t\t{tasks.map(task => (\r\n\t\t\t\t<li key={task.id}>\r\n\t\t\t\t\t<TaskPreview board={board} task={task} />\r\n\t\t\t\t</li>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t)\r\n}\r\n","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-list-header.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-preview.jsx",["199","200"],[],"import { useSelector } from 'react-redux'\r\nimport { LabelPicker } from './task-cmps/label-picker'\r\nimport { TaskTitle } from './task-cmps/task-title'\r\nimport { DatePicker } from './task-cmps/date-picker'\r\nimport { MemberPicker } from './task-cmps/member-picker'\r\n\r\nexport function TaskPreview({ task }) {\r\n\tconst board = useSelector(storeState => storeState.selectedBoardModule.selectedBoard)\r\n\treturn (\r\n\t\t<ul className=\"task-preview clean-list\" style={{ border: '1px solid black' }}>\r\n\t\t\t<TaskTitle task={task} />\r\n\t\t\t{board.cmpsOrder.map((cmpName, idx) => {\r\n\t\t\t\tswitch (cmpName) {\r\n\t\t\t\t\tcase 'status-picker':\r\n\t\t\t\t\tcase 'priority-picker':\r\n\t\t\t\t\t\treturn <LabelPicker key={idx} type={cmpName} task={task} />\r\n\t\t\t\t\tcase 'date-picker':\r\n\t\t\t\t\t\treturn <DatePicker key={idx} task={task} />\r\n\t\t\t\t\tcase 'owner-picker':\r\n\t\t\t\t\tcase 'collaborator-picker':\r\n\t\t\t\t\t\treturn <MemberPicker type={cmpName} key={idx} task={task} />\r\n\t\t\t\t}\r\n\t\t\t})}\r\n\t\t</ul>\r\n\t)\r\n}\r\n","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\store\\selected-board.reducer.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\store\\selected-board.actions.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\task.service.js",["201"],[],"import { storageService } from './async-storage.service.js'\r\nimport { utilService } from './util.service.js'\r\nimport { userService } from './user.service.js'\r\nimport { cloneElement } from 'react'\r\n\r\nconst STORAGE_KEY = 'task'\r\n\r\nexport const taskService = {\r\n    query,\r\n    getById,\r\n    save,\r\n    remove,\r\n    getEmptyTask,\r\n    addTaskMsg\r\n}\r\nwindow.cs = taskService\r\n\r\n\r\nasync function query(filterBy = { txt: '' }) {\r\n    var tasks = await storageService.query(STORAGE_KEY)\r\n    if (filterBy.txt) {\r\n        const regex = new RegExp(filterBy.txt, 'i')\r\n        tasks = tasks.filter(task => regex.test(task.txt) || regex.test(task.description))\r\n    }\r\n    if (filterBy.price) {\r\n        tasks = tasks.filter(task => task.price <= filterBy.price)\r\n    }\r\n    return tasks\r\n}\r\n\r\nasync function getById(taskId) {\r\n    try {\r\n        await storageService.get(STORAGE_KEY, taskId)\r\n    } catch (err) {\r\n        console.error(\"err\", err)\r\n    }\r\n}\r\n\r\nasync function remove(taskId) {\r\n    try {\r\n        await storageService.remove(STORAGE_KEY, taskId)\r\n    } catch (err) {\r\n        console.error(\"err\", err)\r\n    }\r\n}\r\n\r\nasync function save(task) {\r\n    var savedTask\r\n    if (task._id) {\r\n        savedTask = await storageService.put(STORAGE_KEY, task)\r\n    } else {\r\n        task.owner = userService.getLoggedinUser()\r\n        savedTask = await storageService.post(STORAGE_KEY, task)\r\n    }\r\n    return savedTask\r\n}\r\n\r\nasync function addTaskMsg(taskId, txt) {\r\n    // Later, this is all done by the backend\r\n    const task = await getById(taskId)\r\n    if (!task.msgs) task.msgs = []\r\n\r\n    const msg = {\r\n        id: utilService.makeId(),\r\n        by: userService.getLoggedinUser(),\r\n        txt\r\n    }\r\n    task.msgs.push(msg)\r\n    await storageService.put(STORAGE_KEY, task)\r\n\r\n    return msg\r\n}\r\n\r\nfunction getEmptyTask() {\r\n    return {\r\n        id: utilService.makeId(),\r\n        title: '',\r\n        // creator: '',\r\n        // collaborators: '',\r\n        status: '',\r\n        duration: '',\r\n        timeline: '',\r\n        priority: '',\r\n        txt: '',\r\n        // comments: [],\r\n        createdAt: Date.now(),\r\n    }\r\n}\r\n\r\n// \"tasks\": [\r\n//     {\r\n//         \"id\": \"c103\",\r\n//         \"title\": \"Do that\",\r\n//         \"archivedAt\": 1589983468418,\r\n//     },\r\n//     {\r\n//         \"id\": \"c104\",\r\n//         \"title\": \"Help me\",\r\n//         \"status\": \"in-progress\", // monday\r\n//         \"priority\": \"high\",\r\n//         \"description\": \"description\",\r\n//         \"comments\": [\r\n//             {\r\n//                 \"id\": \"ZdPnm\",\r\n//                 \"txt\": \"also @yaronb please CR this\",\r\n//                 \"createdAt\": 1590999817436,\r\n//                 \"byMember\": {\r\n//                     \"_id\": \"u101\",\r\n//                     \"fullname\": \"Tal Tarablus\",\r\n//                     \"imgUrl\": \"http://res.cloudinary.com/shaishar9/image/upload/v1590850482/j1glw3c9jsoz2py0miol.jpg\"\r\n//                 }\r\n//             }\r\n//         ],\r\n//         \"checklists\": [\r\n//             {\r\n//                 \"id\": \"YEhmF\",\r\n//                 \"title\": \"Checklist\",\r\n//                 \"todos\": [\r\n//                     {\r\n//                         \"id\": \"212jX\",\r\n//                         \"title\": \"To Do 1\",\r\n//                         \"isDone\": false\r\n//                     }\r\n//                 ]\r\n//             }\r\n//         ]\r\n\r\n// export function TaskPreview({ task }) {\r\n//     //GET FROM STORE\r\n//     const cmpsOrder = [\r\n//       \"status-picker\",\r\n//       \"member-picker\",\r\n//       \"date-picker\",\r\n//       \"priority-picker\",\r\n//     ];\r\n//     return (\r\n//       <section>\r\n//         <h5>{task.txt}</h5>\r\n//         {cmpsOrder.map((cmp, idx) => {\r\n//           return (\r\n//             <DynamicCmp\r\n//               cmp={cmp}\r\n//               key={idx}\r\n//               onUpdate={(data) => {\r\n//                 console.log(\"Updating: \", cmp, \"with data:\", data);\r\n//                 // make a copy, update the task, create an action\r\n//                 // Call action: updateTask(task, action)\r\n//               }}\r\n//             />\r\n//           );\r\n//         })}\r\n//       </section>\r\n//     );\r\n//   }","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-cmps\\label-picker.jsx",["202"],[],"export function LabelPicker({}) {}\r\n","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-cmps\\member-picker.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-cmps\\task-title.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-cmps\\date-picker.jsx",[],[],{"ruleId":"203","severity":1,"message":"204","line":1,"column":10,"nodeType":"205","messageId":"206","endLine":1,"endColumn":21},{"ruleId":"203","severity":1,"message":"207","line":5,"column":10,"nodeType":"205","messageId":"206","endLine":5,"endColumn":22},{"ruleId":"203","severity":1,"message":"208","line":6,"column":21,"nodeType":"205","messageId":"206","endLine":6,"endColumn":29},{"ruleId":"203","severity":1,"message":"209","line":7,"column":10,"nodeType":"205","messageId":"206","endLine":7,"endColumn":22},{"ruleId":"203","severity":1,"message":"210","line":26,"column":10,"nodeType":"205","messageId":"206","endLine":26,"endColumn":29},{"ruleId":"203","severity":1,"message":"211","line":2,"column":10,"nodeType":"205","messageId":"206","endLine":2,"endColumn":21},{"ruleId":"203","severity":1,"message":"212","line":41,"column":11,"nodeType":"205","messageId":"206","endLine":41,"endColumn":14},{"ruleId":"203","severity":1,"message":"213","line":1,"column":10,"nodeType":"205","messageId":"206","endLine":1,"endColumn":21},{"ruleId":"214","severity":1,"message":"215","line":12,"column":40,"nodeType":"216","messageId":"217","endLine":12,"endColumn":42},{"ruleId":"218","severity":1,"message":"219","line":13,"column":5,"nodeType":"220","messageId":"221","endLine":22,"endColumn":6},{"ruleId":"203","severity":1,"message":"222","line":4,"column":10,"nodeType":"205","messageId":"206","endLine":4,"endColumn":22},{"ruleId":"223","severity":1,"message":"224","line":1,"column":29,"nodeType":"225","messageId":"226","endLine":1,"endColumn":31},"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'boardService' is defined but never used.","'useState' is defined but never used.","'showErrorMsg' is defined but never used.","'createSocketService' is defined but never used.","'httpService' is defined but never used.","'DAY' is assigned a value but never used.","'taskService' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'cloneElement' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected"]