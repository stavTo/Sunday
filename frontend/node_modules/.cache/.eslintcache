[{"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\index.js":"1","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\App.js":"2","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\reportWebVitals.js":"4","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\store\\store.js":"5","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\pages\\home-page.jsx":"6","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\pages\\board-details.jsx":"7","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\pages\\user-details.jsx":"8","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\side-bar.jsx":"9","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\user-msg.jsx":"10","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-details.jsx":"11","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\store\\user.reducer.js":"12","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\event-bus.service.js":"13","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\socket.service.js":"14","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\user.service.js":"15","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\async-storage.service.js":"16","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\http.service.js":"17","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\store\\board.reducer.js":"18","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\board-list.jsx":"19","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\group-list.jsx":"20","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\board.service.local.js":"21","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\board-header.jsx":"22","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\assets\\icons\\icons.js":"23","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\util.service.js":"24","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\store\\board.actions.js":"25","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\group-preview.jsx":"26","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-list.jsx":"27","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-list-header.jsx":"28","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-preview.jsx":"29"},{"size":833,"mtime":1685555048486,"results":"30","hashOfConfig":"31"},{"size":1009,"mtime":1685559464346,"results":"32","hashOfConfig":"31"},{"size":5201,"mtime":1685555048488,"results":"33","hashOfConfig":"31"},{"size":377,"mtime":1685555048487,"results":"34","hashOfConfig":"31"},{"size":664,"mtime":1685559464373,"results":"35","hashOfConfig":"31"},{"size":63,"mtime":1685555048486,"results":"36","hashOfConfig":"31"},{"size":1020,"mtime":1685559464366,"results":"37","hashOfConfig":"31"},{"size":34,"mtime":1685555048487,"results":"38","hashOfConfig":"31"},{"size":202,"mtime":1685559464366,"results":"39","hashOfConfig":"31"},{"size":1162,"mtime":1685555048485,"results":"40","hashOfConfig":"31"},{"size":34,"mtime":1685555048484,"results":"41","hashOfConfig":"31"},{"size":932,"mtime":1685559464373,"results":"42","hashOfConfig":"31"},{"size":895,"mtime":1685555048489,"results":"43","hashOfConfig":"31"},{"size":3091,"mtime":1685559464370,"results":"44","hashOfConfig":"31"},{"size":2754,"mtime":1685559464371,"results":"45","hashOfConfig":"31"},{"size":2156,"mtime":1685555048488,"results":"46","hashOfConfig":"31"},{"size":993,"mtime":1685559464368,"results":"47","hashOfConfig":"31"},{"size":838,"mtime":1685559464372,"results":"48","hashOfConfig":"31"},{"size":360,"mtime":1685559464364,"results":"49","hashOfConfig":"31"},{"size":496,"mtime":1685559594498,"results":"50","hashOfConfig":"31"},{"size":3855,"mtime":1685559464367,"results":"51","hashOfConfig":"31"},{"size":232,"mtime":1685559464364,"results":"52","hashOfConfig":"31"},{"size":1992,"mtime":1685559937392,"results":"53","hashOfConfig":"31"},{"size":1894,"mtime":1685555048491,"results":"54","hashOfConfig":"31"},{"size":1094,"mtime":1685559464371,"results":"55","hashOfConfig":"31"},{"size":381,"mtime":1685559891515,"results":"56","hashOfConfig":"31"},{"size":424,"mtime":1685559738636,"results":"57","hashOfConfig":"31"},{"size":267,"mtime":1685559136420,"results":"58","hashOfConfig":"31"},{"size":152,"mtime":1685559104861,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hrrh26",{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"66"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\index.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\App.js",[],[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\serviceWorkerRegistration.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\store\\store.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\pages\\home-page.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\pages\\board-details.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\pages\\user-details.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\side-bar.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\user-msg.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-details.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\store\\user.reducer.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\event-bus.service.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\socket.service.js",["152"],[],"import io from 'socket.io-client'\r\nimport { userService } from './user.service'\r\n\r\nexport const SOCKET_EVENT_ADD_MSG = 'chat-add-msg'\r\nexport const SOCKET_EMIT_SEND_MSG = 'chat-send-msg'\r\nexport const SOCKET_EMIT_SET_TOPIC = 'chat-set-topic'\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch'\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated'\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added'\r\nexport const SOCKET_EVENT_REVIEW_ABOUT_YOU = 'review-about-you'\r\n\r\nconst SOCKET_EMIT_LOGIN = 'set-user-socket'\r\nconst SOCKET_EMIT_LOGOUT = 'unset-user-socket'\r\n\r\nconst baseUrl = process.env.NODE_ENV === 'production' ? '' : '//localhost:3030'\r\n// export const socketService = createSocketService()\r\nexport const socketService = createDummySocketService()\r\n\r\n// for debugging from console\r\nwindow.socketService = socketService\r\n\r\nsocketService.setup()\r\n\r\nfunction createSocketService() {\r\n\tvar socket = null\r\n\tconst socketService = {\r\n\t\tsetup() {\r\n\t\t\tsocket = io(baseUrl)\r\n\t\t\tconst user = userService.getLoggedInUser()\r\n\t\t\tif (user) this.login(user._id)\r\n\t\t},\r\n\t\ton(eventName, cb) {\r\n\t\t\tsocket.on(eventName, cb)\r\n\t\t},\r\n\t\toff(eventName, cb = null) {\r\n\t\t\tif (!socket) return\r\n\t\t\tif (!cb) socket.removeAllListeners(eventName)\r\n\t\t\telse socket.off(eventName, cb)\r\n\t\t},\r\n\t\temit(eventName, data) {\r\n\t\t\tsocket.emit(eventName, data)\r\n\t\t},\r\n\t\tlogin(userId) {\r\n\t\t\tsocket.emit(SOCKET_EMIT_LOGIN, userId)\r\n\t\t},\r\n\t\tlogout() {\r\n\t\t\tsocket.emit(SOCKET_EMIT_LOGOUT)\r\n\t\t},\r\n\t\tterminate() {\r\n\t\t\tsocket = null\r\n\t\t},\r\n\t}\r\n\treturn socketService\r\n}\r\n\r\nfunction createDummySocketService() {\r\n\tvar listenersMap = {}\r\n\tconst socketService = {\r\n\t\tlistenersMap,\r\n\t\tsetup() {\r\n\t\t\tlistenersMap = {}\r\n\t\t},\r\n\t\tterminate() {\r\n\t\t\tthis.setup()\r\n\t\t},\r\n\t\tlogin() {\r\n\t\t\tconsole.log('Dummy socket service here, login - got it')\r\n\t\t},\r\n\t\tlogout() {\r\n\t\t\tconsole.log('Dummy socket service here, logout - got it')\r\n\t\t},\r\n\t\ton(eventName, cb) {\r\n\t\t\tlistenersMap[eventName] = [...(listenersMap[eventName] || []), cb]\r\n\t\t},\r\n\t\toff(eventName, cb) {\r\n\t\t\tif (!listenersMap[eventName]) return\r\n\t\t\tif (!cb) delete listenersMap[eventName]\r\n\t\t\telse listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n\t\t},\r\n\t\temit(eventName, data) {\r\n\t\t\tvar listeners = listenersMap[eventName]\r\n\t\t\tif (eventName === SOCKET_EMIT_SEND_MSG) {\r\n\t\t\t\tlisteners = listenersMap[SOCKET_EVENT_ADD_MSG]\r\n\t\t\t}\r\n\r\n\t\t\tif (!listeners) return\r\n\r\n\t\t\tlisteners.forEach(listener => {\r\n\t\t\t\tlistener(data)\r\n\t\t\t})\r\n\t\t},\r\n\t\t// Functions for easy testing of pushed data\r\n\t\ttestChatMsg() {\r\n\t\t\tthis.emit(SOCKET_EVENT_ADD_MSG, { from: 'Someone', txt: 'Aha it worked!' })\r\n\t\t},\r\n\t\ttestUserUpdate() {\r\n\t\t\tthis.emit(SOCKET_EVENT_USER_UPDATED, { ...userService.getLoggedInUser(), score: 555 })\r\n\t\t},\r\n\t}\r\n\twindow.listenersMap = listenersMap\r\n\treturn socketService\r\n}\r\n\r\n// Basic Tests\r\n// function cb(x) {console.log('Socket Test - Expected Puk, Actual:', x)}\r\n// socketService.on('baba', cb)\r\n// socketService.on('baba', cb)\r\n// socketService.on('baba', cb)\r\n// socketService.on('mama', cb)\r\n// socketService.emit('baba', 'Puk')\r\n// socketService.off('baba', cb)\r\n","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\user.service.js",["153"],[],"import { storageService } from './async-storage.service'\r\nimport { httpService } from './http.service'\r\n\r\nconst STORAGE_KEY_LOGGEDIN_USER = 'loggedInUser'\r\n\r\nexport const userService = {\r\n\tlogin,\r\n\tlogout,\r\n\tsignup,\r\n\tgetLoggedInUser,\r\n\tsaveLocalUser,\r\n\tgetUsers,\r\n\tgetById,\r\n\tremove,\r\n\tupdate,\r\n\tchangeScore,\r\n}\r\n\r\nwindow.userService = userService\r\n\r\nfunction getUsers() {\r\n\treturn storageService.query('user')\r\n\t// return httpService.get(`user`)\r\n}\r\n\r\nasync function getById(userId) {\r\n\tconst user = await storageService.get('user', userId)\r\n\t// const user = await httpService.get(`user/${userId}`)\r\n\treturn user\r\n}\r\n\r\nfunction remove(userId) {\r\n\treturn storageService.remove('user', userId)\r\n\t// return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update({ _id, score }) {\r\n\tconst user = await storageService.get('user', _id)\r\n\tuser.score = score\r\n\tawait storageService.put('user', user)\r\n\r\n\t// const user = await httpService.put(`user/${_id}`, {_id, score})\r\n\t// Handle case in which admin updates other user's details\r\n\tif (getLoggedInUser()._id === user._id) saveLocalUser(user)\r\n\treturn user\r\n}\r\n\r\nasync function login(userCred) {\r\n\tconst users = await storageService.query('user')\r\n\tconst user = users.find(user => user.username === userCred.username)\r\n\t// const user = await httpService.post('auth/login', userCred)\r\n\tif (user) {\r\n\t\treturn saveLocalUser(user)\r\n\t}\r\n}\r\nasync function signup(userCred) {\r\n\tuserCred.score = 10000\r\n\tif (!userCred.imgUrl) userCred.imgUrl = 'https://cdn.pixabay.com/photo/2020/07/01/12/58/icon-5359553_1280.png'\r\n\tconst user = await storageService.post('user', userCred)\r\n\t// const user = await httpService.post('auth/signup', userCred)\r\n\treturn saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n\tsessionStorage.removeItem(STORAGE_KEY_LOGGEDIN_USER)\r\n\t// return await httpService.post('auth/logout')\r\n}\r\n\r\nasync function changeScore(by) {\r\n\tconst user = getLoggedInUser()\r\n\tif (!user) throw new Error('Not loggedIn')\r\n\tuser.score = user.score + by || by\r\n\tawait update(user)\r\n\treturn user.score\r\n}\r\n\r\nfunction saveLocalUser(user) {\r\n\tuser = { _id: user._id, fullname: user.fullname, imgUrl: user.imgUrl, score: user.score }\r\n\tsessionStorage.setItem(STORAGE_KEY_LOGGEDIN_USER, JSON.stringify(user))\r\n\treturn user\r\n}\r\n\r\nfunction getLoggedInUser() {\r\n\treturn JSON.parse(sessionStorage.getItem(STORAGE_KEY_LOGGEDIN_USER))\r\n}\r\n\r\n// ;(async ()=>{\r\n//     await userService.signup({fullname: 'Puki Norma', username: 'puki', password:'123',score: 10000, isAdmin: false})\r\n//     await userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 10000, isAdmin: true})\r\n//     await userService.signup({fullname: 'Muki G', username: 'muki', password:'123', score: 10000})\r\n// })()\r\n","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\async-storage.service.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\http.service.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\store\\board.reducer.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\board-list.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\group-list.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\board.service.local.js",["154"],[],"import { storageService } from './async-storage.service.js'\r\nimport { utilService } from './util.service.js'\r\nimport { userService } from './user.service.js'\r\n\r\nconst STORAGE_KEY = 'board'\r\n\r\nexport const boardService = {\r\n\tquery,\r\n\tgetById,\r\n\tsave,\r\n\tremove,\r\n\tgetEmptyBoard,\r\n\taddBoardMsg,\r\n}\r\n\r\nasync function query(filterBy = { txt: '', price: 0 }) {\r\n\tvar boards = await storageService.query(STORAGE_KEY)\r\n\tif (filterBy.txt) {\r\n\t\tconst regex = new RegExp(filterBy.txt, 'i')\r\n\t\tboards = boards.filter(board => regex.test(board.vendor) || regex.test(board.description))\r\n\t}\r\n\tif (filterBy.price) {\r\n\t\tboards = boards.filter(board => board.price <= filterBy.price)\r\n\t}\r\n\treturn boards\r\n}\r\n\r\nfunction getById(boardId) {\r\n\treturn storageService.get(STORAGE_KEY, boardId)\r\n}\r\n\r\nasync function remove(boardId) {\r\n\t// throw new Error('Nope')\r\n\tawait storageService.remove(STORAGE_KEY, boardId)\r\n}\r\n\r\nasync function save(board) {\r\n\tvar savedBoard\r\n\tif (board._id) {\r\n\t\tsavedBoard = await storageService.put(STORAGE_KEY, board)\r\n\t} else {\r\n\t\t// Later, owner is set by the backend\r\n\t\tboard.owner = userService.getLoggedInUser()\r\n\t\tsavedBoard = await storageService.post(STORAGE_KEY, board)\r\n\t}\r\n\treturn savedBoard\r\n}\r\n\r\nasync function addBoardMsg(boardId, txt) {\r\n\t// Later, this is all done by the backend\r\n\tconst board = await getById(boardId)\r\n\tif (!board.msgs) board.msgs = []\r\n\r\n\tconst msg = {\r\n\t\tid: utilService.makeId(),\r\n\t\tby: userService.getLoggedInUser(),\r\n\t\ttxt,\r\n\t}\r\n\tboard.msgs.push(msg)\r\n\tawait storageService.put(STORAGE_KEY, board)\r\n\r\n\treturn msg\r\n}\r\n\r\nfunction getEmptyBoard() {\r\n\treturn {\r\n\t\t_id: '',\r\n\t\ttitle: '',\r\n\t\tisStarred: false,\r\n\t\tarchivedAt: null,\r\n\t\tcreatedBy: { _id: '', fullname: '', imgUrl: '' },\r\n\t\tstyle: {},\r\n\t\tmembers: [],\r\n\t\tgroups: [],\r\n\t\tcmpsOrder: [],\r\n\t}\r\n}\r\n\r\nfunction _getDummyBoard(boardNum) {\r\n\treturn {\r\n\t\ttitle: `board${boardNum}`,\r\n\t\tisStarred: false,\r\n\t\tarchivedAt: 1589983468418,\r\n\t\tcreatedBy: {\r\n\t\t\t_id: 'u101',\r\n\t\t\tfullname: 'Abi Abambi',\r\n\t\t\timgUrl: 'http://some-img',\r\n\t\t},\r\n\t\tstyle: {},\r\n\t\tmembers: [\r\n\t\t\t{\r\n\t\t\t\t_id: 'u101',\r\n\t\t\t\tfullname: 'Tal Tarablus',\r\n\t\t\t\timgUrl: 'https://www.google.com',\r\n\t\t\t},\r\n\t\t],\r\n\t\tgroups: [\r\n\t\t\t{\r\n\t\t\t\tid: 'g101',\r\n\t\t\t\ttitle: 'Group 1',\r\n\t\t\t\tarchivedAt: 1589983468418,\r\n\t\t\t\ttasks: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: 'c101',\r\n\t\t\t\t\t\ttitle: 'Replace logo',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: 'c102',\r\n\t\t\t\t\t\ttitle: 'Add Samples',\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tstyle: {},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 'g102',\r\n\t\t\t\ttitle: 'Group 2',\r\n\t\t\t\ttasks: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: 'c103',\r\n\t\t\t\t\t\ttitle: 'Do that',\r\n\t\t\t\t\t\tarchivedAt: 1589983468418,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: 'c104',\r\n\t\t\t\t\t\ttitle: 'Help me',\r\n\t\t\t\t\t\tstatus: 'in-progress', // monday\r\n\t\t\t\t\t\tpriority: 'high',\r\n\t\t\t\t\t\tdescription: 'description',\r\n\t\t\t\t\t\tcomments: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tid: 'ZdPnm',\r\n\t\t\t\t\t\t\t\ttxt: 'also @yaronb please CR this',\r\n\t\t\t\t\t\t\t\tcreatedAt: 1590999817436,\r\n\t\t\t\t\t\t\t\tbyMember: {\r\n\t\t\t\t\t\t\t\t\t_id: 'u101',\r\n\t\t\t\t\t\t\t\t\tfullname: 'Tal Tarablus',\r\n\t\t\t\t\t\t\t\t\timgUrl: 'http://res.cloudinary.com/shaishar9/image/upload/v1590850482/j1glw3c9jsoz2py0miol.jpg',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tchecklists: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tid: 'YEhmF',\r\n\t\t\t\t\t\t\t\ttitle: 'Checklist',\r\n\t\t\t\t\t\t\t\ttodos: [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tid: '212jX',\r\n\t\t\t\t\t\t\t\t\t\ttitle: 'To Do 1',\r\n\t\t\t\t\t\t\t\t\t\tisDone: false,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tmemberIds: ['u101'],\r\n\t\t\t\t\t\tlabelIds: ['l101', 'l102'],\r\n\t\t\t\t\t\tdueDate: 16156215211,\r\n\t\t\t\t\t\tbyMember: {\r\n\t\t\t\t\t\t\t_id: 'u101',\r\n\t\t\t\t\t\t\tusername: 'Tal',\r\n\t\t\t\t\t\t\tfullname: 'Tal Tarablus',\r\n\t\t\t\t\t\t\timgUrl: 'http://res.cloudinary.com/shaishar9/image/upload/v1590850482/j1glw3c9jsoz2py0miol.jpg',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\tbgColor: '#26de81',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tstyle: {},\r\n\t\t\t},\r\n\t\t],\r\n\t\tcmpsOrder: ['status-picker', 'member-picker', 'date-picker'],\r\n\t}\r\n}\r\n\r\n// storageService.post(STORAGE_KEY, _getDummyBoard(1))\r\n","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\board-header.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\assets\\icons\\icons.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\services\\util.service.js",["155"],[],"export const utilService = {\r\n    makeId,\r\n    makeLorem,\r\n    getRandomIntInclusive,\r\n    debounce,\r\n    randomPastTime,\r\n    saveToStorage,\r\n    loadFromStorage\r\n}\r\n\r\nfunction makeId(length = 6) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n\r\n    return txt\r\n}\r\n\r\nfunction makeLorem(size = 100) {\r\n    var words = ['The sky', 'above', 'the port', 'was', 'the color of television', 'tuned', 'to', 'a dead channel', '.', 'All', 'this happened', 'more or less', '.', 'I', 'had', 'the story', 'bit by bit', 'from various people', 'and', 'as generally', 'happens', 'in such cases', 'each time', 'it', 'was', 'a different story', '.', 'It', 'was', 'a pleasure', 'to', 'burn']\r\n    var txt = ''\r\n    while (size > 0) {\r\n        size--\r\n        txt += words[Math.floor(Math.random() * words.length)] + ' '\r\n    }\r\n    return txt\r\n}\r\n\r\nfunction getRandomIntInclusive(min, max) {\r\n    min = Math.ceil(min)\r\n    max = Math.floor(max)\r\n    return Math.floor(Math.random() * (max - min + 1)) + min //The maximum is inclusive and the minimum is inclusive \r\n}\r\n\r\n\r\nfunction randomPastTime() {\r\n    const HOUR = 1000 * 60 * 60\r\n    const DAY = 1000 * 60 * 60 * 24\r\n    const WEEK = 1000 * 60 * 60 * 24 * 7\r\n\r\n    const pastTime = getRandomIntInclusive(HOUR, WEEK)\r\n    return Date.now() - pastTime\r\n}\r\n\r\nfunction debounce(func, timeout = 300){\r\n    let timer\r\n    return (...args) => {\r\n      clearTimeout(timer)\r\n      timer = setTimeout(() => { func.apply(this, args) }, timeout)\r\n    }\r\n}\r\n\r\nfunction saveToStorage(key, value) {\r\n    localStorage.setItem(key, JSON.stringify(value))\r\n}\r\n\r\nfunction loadFromStorage(key) {\r\n    const data = localStorage.getItem(key)\r\n    return (data) ? JSON.parse(data) : undefined\r\n}\r\n","C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\store\\board.actions.js",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\group-preview.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-list.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-list-header.jsx",[],[],"C:\\Users\\Roni\\Desktop\\Local Dev\\Monday\\dev\\Sunday\\frontend\\src\\cmps\\task-preview.jsx",[],[],{"ruleId":"156","severity":1,"message":"157","line":26,"column":10,"nodeType":"158","messageId":"159","endLine":26,"endColumn":29},{"ruleId":"156","severity":1,"message":"160","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":21},{"ruleId":"156","severity":1,"message":"161","line":79,"column":10,"nodeType":"158","messageId":"159","endLine":79,"endColumn":24},{"ruleId":"156","severity":1,"message":"162","line":41,"column":11,"nodeType":"158","messageId":"159","endLine":41,"endColumn":14},"no-unused-vars","'createSocketService' is defined but never used.","Identifier","unusedVar","'httpService' is defined but never used.","'_getDummyBoard' is defined but never used.","'DAY' is assigned a value but never used."]