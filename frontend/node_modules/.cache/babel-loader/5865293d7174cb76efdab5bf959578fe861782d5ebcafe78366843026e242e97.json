{"ast":null,"code":"import io from 'socket.io-client';\nimport { userService } from './user.service';\nexport const SOCKET_EVENT_ADD_MSG = 'chat-add-msg';\nexport const SOCKET_EMIT_SEND_MSG = 'chat-send-msg';\nexport const SOCKET_EMIT_SET_TOPIC = 'chat-set-topic';\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\nexport const SOCKET_EVENT_REVIEW_ABOUT_YOU = 'review-about-you';\nconst SOCKET_EMIT_LOGIN = 'set-user-socket';\nconst SOCKET_EMIT_LOGOUT = 'unset-user-socket';\nconst baseUrl = process.env.NODE_ENV === 'production' ? '' : '//localhost:3030';\n// export const socketService = createSocketService()\nexport const socketService = createDummySocketService();\n\n// for debugging from console\nwindow.socketService = socketService;\nsocketService.setup();\nfunction createSocketService() {\n  var socket = null;\n  const socketService = {\n    setup() {\n      socket = io(baseUrl);\n      const user = userService.getLoggedinUser();\n      if (user) this.login(user._id);\n    },\n    on(eventName, cb) {\n      socket.on(eventName, cb);\n    },\n    off(eventName) {\n      let cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      if (!socket) return;\n      if (!cb) socket.removeAllListeners(eventName);else socket.off(eventName, cb);\n    },\n    emit(eventName, data) {\n      socket.emit(eventName, data);\n    },\n    login(userId) {\n      socket.emit(SOCKET_EMIT_LOGIN, userId);\n    },\n    logout() {\n      socket.emit(SOCKET_EMIT_LOGOUT);\n    },\n    terminate() {\n      socket = null;\n    }\n  };\n  return socketService;\n}\nfunction createDummySocketService() {\n  var listenersMap = {};\n  const socketService = {\n    listenersMap,\n    setup() {\n      listenersMap = {};\n    },\n    terminate() {\n      this.setup();\n    },\n    login() {\n      console.log('Dummy socket service here, login - got it');\n    },\n    logout() {\n      console.log('Dummy socket service here, logout - got it');\n    },\n    on(eventName, cb) {\n      listenersMap[eventName] = [...(listenersMap[eventName] || []), cb];\n    },\n    off(eventName, cb) {\n      if (!listenersMap[eventName]) return;\n      if (!cb) delete listenersMap[eventName];else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb);\n    },\n    emit(eventName, data) {\n      var listeners = listenersMap[eventName];\n      if (eventName === SOCKET_EMIT_SEND_MSG) {\n        listeners = listenersMap[SOCKET_EVENT_ADD_MSG];\n      }\n      if (!listeners) return;\n      listeners.forEach(listener => {\n        listener(data);\n      });\n    },\n    // Functions for easy testing of pushed data\n    testChatMsg() {\n      this.emit(SOCKET_EVENT_ADD_MSG, {\n        from: 'Someone',\n        txt: 'Aha it worked!'\n      });\n    },\n    testUserUpdate() {\n      this.emit(SOCKET_EVENT_USER_UPDATED, {\n        ...userService.getLoggedinUser(),\n        score: 555\n      });\n    }\n  };\n  window.listenersMap = listenersMap;\n  return socketService;\n}\n\n// Basic Tests\n// function cb(x) {console.log('Socket Test - Expected Puk, Actual:', x)}\n// socketService.on('baba', cb)\n// socketService.on('baba', cb)\n// socketService.on('baba', cb)\n// socketService.on('mama', cb)\n// socketService.emit('baba', 'Puk')\n// socketService.off('baba', cb)","map":{"version":3,"names":["io","userService","SOCKET_EVENT_ADD_MSG","SOCKET_EMIT_SEND_MSG","SOCKET_EMIT_SET_TOPIC","SOCKET_EMIT_USER_WATCH","SOCKET_EVENT_USER_UPDATED","SOCKET_EVENT_REVIEW_ADDED","SOCKET_EVENT_REVIEW_ABOUT_YOU","SOCKET_EMIT_LOGIN","SOCKET_EMIT_LOGOUT","baseUrl","process","env","NODE_ENV","socketService","createDummySocketService","window","setup","createSocketService","socket","user","getLoggedinUser","login","_id","on","eventName","cb","off","arguments","length","undefined","removeAllListeners","emit","data","userId","logout","terminate","listenersMap","console","log","filter","l","listeners","forEach","listener","testChatMsg","from","txt","testUserUpdate","score"],"sources":["C:/Users/Roni/Desktop/Local Dev/Monday/dev/Sunday/frontend/src/services/socket.service.js"],"sourcesContent":["import io from 'socket.io-client'\r\nimport { userService } from './user.service'\r\n\r\nexport const SOCKET_EVENT_ADD_MSG = 'chat-add-msg'\r\nexport const SOCKET_EMIT_SEND_MSG = 'chat-send-msg'\r\nexport const SOCKET_EMIT_SET_TOPIC = 'chat-set-topic'\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch'\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated'\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added'\r\nexport const SOCKET_EVENT_REVIEW_ABOUT_YOU = 'review-about-you'\r\n\r\nconst SOCKET_EMIT_LOGIN = 'set-user-socket'\r\nconst SOCKET_EMIT_LOGOUT = 'unset-user-socket'\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\n// export const socketService = createSocketService()\r\nexport const socketService = createDummySocketService()\r\n\r\n// for debugging from console\r\nwindow.socketService = socketService\r\n\r\nsocketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    setup() {\r\n      socket = io(baseUrl)\r\n      const user = userService.getLoggedinUser()\r\n      if (user) this.login(user._id)\r\n    },\r\n    on(eventName, cb) {\r\n      socket.on(eventName, cb)\r\n    },\r\n    off(eventName, cb = null) {\r\n      if (!socket) return;\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    emit(eventName, data) {\r\n      socket.emit(eventName, data)\r\n    },\r\n    login(userId) {\r\n      socket.emit(SOCKET_EMIT_LOGIN, userId)\r\n    },\r\n    logout() {\r\n      socket.emit(SOCKET_EMIT_LOGOUT)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n    },\r\n\r\n  }\r\n  return socketService\r\n}\r\n\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    listenersMap,\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    login() {\r\n      console.log('Dummy socket service here, login - got it')\r\n    },\r\n    logout() {\r\n      console.log('Dummy socket service here, logout - got it')\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      if (!cb) delete listenersMap[eventName]\r\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      var listeners = listenersMap[eventName]\r\n      if (eventName === SOCKET_EMIT_SEND_MSG) {\r\n        listeners = listenersMap[SOCKET_EVENT_ADD_MSG]\r\n      }\r\n\r\n      if (!listeners) return\r\n\r\n      listeners.forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    // Functions for easy testing of pushed data\r\n    testChatMsg() {\r\n      this.emit(SOCKET_EVENT_ADD_MSG, { from: 'Someone', txt: 'Aha it worked!' })\r\n    },\r\n    testUserUpdate() {\r\n      this.emit(SOCKET_EVENT_USER_UPDATED, { ...userService.getLoggedinUser(), score: 555 })\r\n    }\r\n  }\r\n  window.listenersMap = listenersMap;\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\n// function cb(x) {console.log('Socket Test - Expected Puk, Actual:', x)}\r\n// socketService.on('baba', cb)\r\n// socketService.on('baba', cb)\r\n// socketService.on('baba', cb)\r\n// socketService.on('mama', cb)\r\n// socketService.emit('baba', 'Puk')\r\n// socketService.off('baba', cb)\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}