{"ast":null,"code":"export const SET_BOARDS = 'SET_BOARDS';\nexport const UPDATE_BOARD = 'UPDATE_BOARD';\nexport const REMOVE_BOARD = 'REMOVE_BOARD';\nexport const ADD_BOARD = 'ADD_BOARD';\nconst initialState = {\n  boards: []\n};\nexport function boardReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newBoards;\n  switch (action.type) {\n    case SET_BOARDS:\n      return {\n        ...state,\n        boards: action.boards\n      };\n    case REMOVE_BOARD:\n      newBoards = state.boards.filter(board => board._id !== action.boardId);\n      return {\n        ...state,\n        boards: newBoards\n      };\n    case ADD_BOARD:\n      newBoards = [...state.boards, action.board];\n      return {\n        ...state,\n        boards: newBoards\n      };\n    case UPDATE_BOARD:\n      newBoards = state.boards.map(board => board._id === action.board._id ? action.board : board);\n      return {\n        ...state,\n        boards: newBoards\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n}","map":{"version":3,"names":["SET_BOARDS","UPDATE_BOARD","REMOVE_BOARD","ADD_BOARD","initialState","boards","boardReducer","state","arguments","length","undefined","action","newBoards","type","filter","board","_id","boardId","map"],"sources":["C:/Users/Roni/Desktop/Local Dev/Monday/dev/Sunday/frontend/src/store/board.reducer.js"],"sourcesContent":["export const SET_BOARDS = 'SET_BOARDS'\r\nexport const UPDATE_BOARD = 'UPDATE_BOARD'\r\nexport const REMOVE_BOARD = 'REMOVE_BOARD'\r\nexport const ADD_BOARD = 'ADD_BOARD'\r\n\r\nconst initialState = {\r\n\tboards: [],\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n\tlet newBoards\r\n\tswitch (action.type) {\r\n\t\tcase SET_BOARDS:\r\n\t\t\treturn { ...state, boards: action.boards }\r\n\t\tcase REMOVE_BOARD:\r\n\t\t\tnewBoards = state.boards.filter(board => board._id !== action.boardId)\r\n\t\t\treturn { ...state, boards: newBoards }\r\n\t\tcase ADD_BOARD:\r\n\t\t\tnewBoards = [...state.boards, action.board]\r\n\t\t\treturn { ...state, boards: newBoards }\r\n\t\tcase UPDATE_BOARD:\r\n\t\t\tnewBoards = state.boards.map(board => (board._id === action.board._id ? action.board : board))\r\n\t\t\treturn { ...state, boards: newBoards }\r\n\t\tdefault:\r\n\t\t\treturn { ...state }\r\n\t}\r\n}\r\n"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMC,YAAY,GAAG,cAAc;AAC1C,OAAO,MAAMC,YAAY,GAAG,cAAc;AAC1C,OAAO,MAAMC,SAAS,GAAG,WAAW;AAEpC,MAAMC,YAAY,GAAG;EACpBC,MAAM,EAAE;AACT,CAAC;AAED,OAAO,SAASC,YAAYA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACxD,IAAIE,SAAS;EACb,QAAQD,MAAM,CAACE,IAAI;IAClB,KAAKb,UAAU;MACd,OAAO;QAAE,GAAGO,KAAK;QAAEF,MAAM,EAAEM,MAAM,CAACN;MAAO,CAAC;IAC3C,KAAKH,YAAY;MAChBU,SAAS,GAAGL,KAAK,CAACF,MAAM,CAACS,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,GAAG,KAAKL,MAAM,CAACM,OAAO,CAAC;MACtE,OAAO;QAAE,GAAGV,KAAK;QAAEF,MAAM,EAAEO;MAAU,CAAC;IACvC,KAAKT,SAAS;MACbS,SAAS,GAAG,CAAC,GAAGL,KAAK,CAACF,MAAM,EAAEM,MAAM,CAACI,KAAK,CAAC;MAC3C,OAAO;QAAE,GAAGR,KAAK;QAAEF,MAAM,EAAEO;MAAU,CAAC;IACvC,KAAKX,YAAY;MAChBW,SAAS,GAAGL,KAAK,CAACF,MAAM,CAACa,GAAG,CAACH,KAAK,IAAKA,KAAK,CAACC,GAAG,KAAKL,MAAM,CAACI,KAAK,CAACC,GAAG,GAAGL,MAAM,CAACI,KAAK,GAAGA,KAAM,CAAC;MAC9F,OAAO;QAAE,GAAGR,KAAK;QAAEF,MAAM,EAAEO;MAAU,CAAC;IACvC;MACC,OAAO;QAAE,GAAGL;MAAM,CAAC;EACrB;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}